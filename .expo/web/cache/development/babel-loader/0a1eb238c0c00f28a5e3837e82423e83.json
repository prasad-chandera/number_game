{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useState } from \"react\";\nimport PrimaryButton from \"../components/PrimaryButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default StartGameScreen = function StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  var numberInputHandler = function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredNumber(\"\");\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\"Invalid number!\", \"Number has to be between 1 and 99.\", [{\n        text: \"Okay\",\n        style: \"destructive\",\n        onPress: resetInputHandler\n      }]);\n      return;\n    } else {\n      onPickNumber(chosenNumber);\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(TextInput, {\n      style: styles.numberInput,\n      maxLength: 2,\n      value: enteredNumber,\n      onChangeText: numberInputHandler,\n      keyboardType: \"number-pad\",\n      autoCapitalize: \"none\",\n      autoCorrect: false\n    }), _jsxs(View, {\n      style: styles.buttonsContainer,\n      children: [_jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: resetInputHandler,\n          children: \"Reset\"\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(PrimaryButton, {\n          onPress: confirmInputHandler,\n          children: \"Confirm\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  inputContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 16,\n    marginTop: 100,\n    marginHorizontal: 25,\n    backgroundColor: \"#4e0329\",\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 6,\n    shadowOpacity: 0.25\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: \"#ddb52f\",\n    borderBottomWidth: 2,\n    color: \"#ddb52f\",\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/mac/Documents/React_Native/starting-project/screens/StartGameScreen.js"],"names":["useState","PrimaryButton","StartGameScreen","onPickNumber","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","styles","inputContainer","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","alignItems","justifyContent","padding","marginTop","marginHorizontal","backgroundColor","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowRadius","shadowOpacity","fontSize","borderBottomColor","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection","flex"],"mappings":"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","sourcesContent":["import { TextInput, View, StyleSheet, Alert } from \"react-native\";\nimport { useState } from \"react\";\n\nimport PrimaryButton from \"../components/PrimaryButton\";\n\nexport default StartGameScreen = ({ onPickNumber }) => {\n    const [enteredNumber, setEnteredNumber] = useState(\"\");\n    const numberInputHandler = (enteredText) => {\n        setEnteredNumber(enteredText);\n    };\n\n    const resetInputHandler = () => {\n        setEnteredNumber(\"\");\n    };\n\n    const confirmInputHandler = () => {\n        const chosenNumber = parseInt(enteredNumber);\n        if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n            Alert.alert(\n                \"Invalid number!\",\n                \"Number has to be between 1 and 99.\",\n                [\n                    {\n                        text: \"Okay\",\n                        style: \"destructive\",\n                        onPress: resetInputHandler,\n                    },\n                ]\n            );\n            return;\n        } else {\n            onPickNumber(chosenNumber);\n        }\n    };\n\n    return (\n        <View style={styles.inputContainer}>\n            <TextInput\n                style={styles.numberInput}\n                maxLength={2}\n                value={enteredNumber}\n                onChangeText={numberInputHandler}\n                keyboardType=\"number-pad\"\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n            />\n            <View style={styles.buttonsContainer}>\n                <View style={styles.buttonContainer}>\n                    <PrimaryButton onPress={resetInputHandler}>\n                        Reset\n                    </PrimaryButton>\n                </View>\n                <View style={styles.buttonContainer}>\n                    <PrimaryButton onPress={confirmInputHandler}>\n                        Confirm\n                    </PrimaryButton>\n                </View>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    inputContainer: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 16,\n        marginTop: 100,\n        marginHorizontal: 25,\n        backgroundColor: \"#4e0329\",\n        borderRadius: 8,\n        //Android box-shadow\n        elevation: 4,\n\n        //ios box-shadow\n        shadowColor: \"black\",\n        shadowOffset: { width: 0, height: 2 },\n        shadowRadius: 6,\n        shadowOpacity: 0.25,\n    },\n    numberInput: {\n        height: 50,\n        width: 50,\n        fontSize: 32,\n        borderBottomColor: \"#ddb52f\",\n        borderBottomWidth: 2,\n        color: \"#ddb52f\",\n        marginVertical: 8,\n        fontWeight: \"bold\",\n        textAlign: \"center\",\n    },\n    buttonsContainer: {\n        flexDirection: \"row\",\n    },\n    buttonContainer: {\n        flex: 1,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}